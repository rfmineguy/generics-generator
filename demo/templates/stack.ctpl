#include "stack_X.h"
#include "stack_X_spec.c"
#include <stdlib.h>
#include <stdio.h>

stack_X stack_X_new(int initialCapacity) {
	stack_X s = (stack_X){0};
	s.capacity = initialCapacity;
	s.data = CALLOC(s.capacity, sizeof(#X));
	s.top = -1;
	return s;
}

void stack_X_free(stack_X* stack) {
	FREE(stack->data);
}

void stack_X_push(stack_X* stack, #X val) {
	if (stack->top + 1 >= stack->capacity) {
		stack->data = REALLOC(stack->data, stack->capacity * 2);
		stack->capacity *= 2;
	}
	stack->data[++stack->top] = val;
}

#X stack_X_peek(stack_X* stack) {
	if (stack->top == -1) {
		fprintf(stderr, "Can't peek\n");
	}
	return stack->data[stack->top];
}

#X stack_X_pop(stack_X* stack) {
	#X v = stack_X_peek(stack);
	stack->top--;
	if (stack->top <= -1) stack->top = -1;
	return v;
}

void stack_X_print(stack_X* stack) {
	for (int i = stack->top; i >= 0; i--) {
		PRINT("%d : ", i); stack_X_print_val(stack->data[i]); PRINT("\n");
	}
}
